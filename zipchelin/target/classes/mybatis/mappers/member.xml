<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="mapper.member">	
	<resultMap type="memberVO" id="memResult">
 		<result property="id" column="id"/>
 		<result property="pwd" column="pwd"/>
 		<result property="name" column="name"/>
 		<result property="email" column="email"/>
 		<result property="joinDate" column="joinDate"/>
 	</resultMap>
 <!-- 
 	<resultMap type="java.util.HashMap" id="memResult">
 		<result property="id" column="id"/>
 		<result property="pwd" column="pwd"/>
 		<result property="name" column="name"/>
 		<result property="email" column="email"/>
 		<result property="joinDate" column="joinDate"/>
 	</resultMap>	
  -->	
  	<sql id="sr">
  		<![CDATA[
  			select * from member_tbl
  		]]>
  	</sql>
  	
 	<select id="selectAllMembersList" resultMap="memResult">
 		<include refid="sr"/>
 		order by joinDate desc
 	</select>
 	<select id="selectID" resultType="String">
 		<![CDATA[
 			select id from member_tbl where name='김하성'
 		]]>
 	</select>
 	<select id="selectPWD" resultType="String">
 		<![CDATA[
 			select pwd from member_tbl where id='son'
 		]]>
 	</select>
 	<select id="selectMemberById" resultType="memberVO" parameterType="String">	<!-- parameterType: memberVO 클래스 타입 -->
 		<include refid="sr"/>
 		<where>
 			id=#{id}
 		</where>
 	</select>
 	<select id="selectMemberByName" resultMap="memResult" parameterType="String"> <!-- parameterType: memberVO 클래스 타입 -->
 		<include refid="sr"/>
 		<where>
 			name=#{name}
 		</where>
 	</select>
 	<select id="loginCheck" resultType="memberVO" parameterType="memberVO">
 		<include refid="sr"/>
 		<where>
 			id=#{id} and pwd=#{pwd}
 		</where>
 	</select>
 	<insert id="insertMember" parameterType="memberVO">
 		<![CDATA[
 			insert into member_tbl(id, pwd, name, email) values(#{id},#{pwd},#{name},#{email})
 		]]>
 	</insert>
 	<insert id="insertMember2" parameterType="java.util.HashMap">
 		<![CDATA[
 			insert into member_tbl(id, pwd, name, email) values(#{id},#{pwd},#{name},#{email})
 		]]>
 	</insert>
 	<update id="updateMember" parameterType="memberVO">
 		<![CDATA[
 			update member_tbl set pwd=#{pwd}, name=#{name}, email=#{email} where id=#{id}
 		]]>
 	</update>
 	<delete id="delMember" parameterType="String">
 		<![CDATA[
 			delete from member_tbl where id=#{id}
 		]]>
 	</delete>
 	<!-- 마이바티스를 이용한 동적 SQL문(where 조건에 if문 활용)
 	 <select id="searchMember" resultMap="memResult" parameterType="memberVO">
 		select * from member_tbl
 		<where>
 			<if test="name != '' and name != null">
 				name=#{name}
 			</if>
 			<if test="email != '' and email != null">
 				and email=#{email}
 			</if>
 		</where>
 		order by joinDate desc
 	</select> -->
 	
 	<select id="searchMember" resultMap="memResult" parameterType="memberVO">
 		<include refid="sr"/>
 		<where>
 			<choose>
 				<when test="name != '' and name != null and email != '' and email != null">
 					name=#{name} and email=#{email}
 				</when>
 				<when test="name != '' and name != null">
 					name like '%' || #{name} || '%'
 				</when>
 				<when test="email != '' and email != null">
 					email like '%' || #{email} || '%'
 				</when>
 			</choose>
 		</where>
 		order by joinDate desc
 	</select>
 	
 	<select id="foreachSelect" resultMap="memResult" parameterType="java.util.Map">
 		<include refid="sr"/> where name in
 		<foreach item="item" collection="list" open="(" separator="," close=")">
 			#{item}
 		</foreach>
 		order by joinDate desc
 	</select>
 	
 	<!-- MySQL용 : MySQL에서는 주석 코드와 같이 사용해도 되지만 오라클에서는 에러남
 	<insert id="foreachInsert" parameterType="java.util.Map">
 		insert into member_tbl(id,pwd,name,email) values
 		<foreach item="item" collection="list">
 			(#{item.id}, #{item.pwd}, #{item.name}, #{item.email})
 		</foreach>
 	</insert>
 	 -->
 	 <insert id="foreachInsert" parameterType="java.util.Map">
 		<foreach item="item" collection="list" open="insert all" separator=" " close="select * from dual">
 			into member_tbl(id,pwd,name,email) values(#{item.id}, #{item.pwd}, #{item.name}, #{item.email})
 		</foreach>
 	</insert>
 </mapper>
 
 
 
 
 
 
 